name: Full API Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  run-api-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [python, javascript, java]
        test-type: [functional, integration, security]
        include:
          - language: python
            python-version: '3.12'
          - language: javascript
            node-version: '20'
          - language: java
            java-version: '17'

    steps:
      - uses: actions/checkout@v4

      # Python setup
      - uses: actions/setup-python@v4
        if: matrix.language == 'python'
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        if: matrix.language == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov allure-pytest requests assertpy

      # JavaScript setup
      - uses: actions/setup-node@v4
        if: matrix.language == 'javascript'
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install JS Dependencies
        if: matrix.language == 'javascript'
        run: |
          npm install
          npm install jest supertest axios chai allure-jest

      # Java setup
      - uses: actions/setup-java@v4
        if: matrix.language == 'java'
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}

      - name: Install Java Dependencies
        if: matrix.language == 'java'
        run: |
          mvn clean install

      # Run tests
      - name: Execute Tests
        run: |
          chmod +x scripts/run_tests.sh
          ./scripts/run_tests.sh --language java --type functional --env test
    
      # Upload test reports
      - uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.language }}-${{ matrix.test-type }}
          path: reports/allure_results/${{ matrix.language }}/${{ matrix.test-type }}

  # Create Release (optional)
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: run-api-tests
    steps:
      - uses: actions/checkout@v4

      - name: Create ZIP of Allure Reports
        run: |
          zip -r allure-report.zip reports/allure_results/

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            reports/allure-report.zip
            dist/*.tar.gz
          body_path: CHANGELOG.md
